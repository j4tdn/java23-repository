1.các hướng xây dựng, phát triển, giải quyết 1 bài toán trong lập trình

+FOP(functional Oriented Programming):Lập trình hướng chức năng,hàm
-->Khi code 1 bài toán, xem bài toán như là 1 chức năng
	Chia nhỏ chức năng đó thành cách chức năng nhỏ hơn để giải quyết
--> 1 bài toán là 1 hàm lớn->chứa/gọi các hàm nhỏ hơn

hạn chế: Vì các hàm gọi lẫn nhau, nếu 1 hàm xảu ra lỗi kéo theo cẩ hệ thônhs
		Dữ liệ dùng chung, ko có phân quyền dữ liệu
		
+OOP(Object Oriented Programing):Lập trình hướng đối tượng(chứa 1 hoặc nhiều)
-->system = Tập hợp các đối tượng object
-->Object = attribute(s) +method(s)
		  = data structure +function
VD: Bài toán về quản lý cửa hàng thời trang
+Bài taons sẽ có những đối tượng :Mặt hàng , loại hàng
+Mặt hàng
-->Lưu trữ mã mặt hàng, tên mặt hàng,giá bán,giá mua,số lượng,kích cỡ
-->chức năng : liệt kê các mặt hàng,tìm kiếm ,chọn để bán...
+Đơn hàng
-->lưu trữ mã đơn hàng,danh sách các mặt hàng số lượng , tổng tiền , khách hàng nào...
-->Chức năng :Tạo đơn hàng, xuất hóa đơn,thanh toán offline ,online

+AOP(Aspect Object Programing):lập trình hướng khía cạnh
-->Xây dựng phát triể trong các thư viện,framework
-->khi gọi/thực thi 1 chức năng, chức năng đó sẽ được thực thi tự động kèm với 1/n chức năng khác theo cấu hình

Vd:Ngôn ngữ JDBC/JPA-Hibernate:Database Connection
+Chắc năng chuyển/nhận qua các app ngân hàng, làm 2 việc

+Đăng Nhập


+Người chuyển: Trừ tiền tài khoản
+Người Nhập:Nhận được số tiền	
-->Vấn đề:lỗi mạng , ứng dụng bị lỗi:số tiền ng cguyeenr bị trừ, ng nhận lại 
-->commit ,rollback


hamchuyentien(){
	hamA();
	hamB();
}

-->CronJob(QuartJob): Cấu hình 1 chức năng sẽ được thi ở thời điểm nào đó

=================OOP trong Java ===============
+Object:là khái niệm dùng để mô ta cách thực thể trong thế giới thực thông tin rõ ràng cụ thê,phân biệt đc vs các thực thể khác -->đối tương
		VD:2 xe hơi khác nhau màu sặc,hãng xe,số chỗ ngồi
+class:là khái niệm trừu tượng dùng để chỉ tập hợp các dối tượng có chung thuộc tính, phương thức
	   VD:2 chiếc xe hơi có thể giống nhau về màu sắc hãng xe, số chỗ ngồi giống khác nhau
	   nhưng đều có thông tin:màu sắc , hãng xe, số chỗ ngồi

+class Car:color ,model , noSeats
-->khái niệm class , object  chỉ mang tính chất tương đối
1 class cũm có thể là 1 object hay ngược lại trong các trường hợp khác nhau

VD:xe hoi:XeXanh,XeVang,XeDo
	PhuongTien:XeHoi,XeDap,Xemay
	
-->coding:atributes +methods
		 :gọi hàm khỏi toa từ class -->khởi tạo ra Object
	

-->Cấu hình sao đó để khi gọi hàm hamchuyentien()
-->nếu có lỗi xảu ra thì gọi lệnh hàm rollback đến tra lại kiểu dữ liệu ban đàu
-->nếu thực thi ok->commit lưu trữ dữ liệu
