1. Các hướng xây dựng và phát triển và giải quyết 1 bài toán trong lập trình

3+ FOP (Functional Object Programming): Lập trình hướng chức năng, hàm
--->Khi code 1 bài toán, xem bài toán như là 1 chức năng
   rồi chia nhỏ chức năng đó thành cách chức năng nhỏ hơn để giải quyết
---> 1 bài toán là 1 hàm lớn --> chứa/ gọi các hàm nhỏ hơn

8. Hạn chế: Vì các hàm gọi lẫn nhau, nếu 1 hàm xảy ra lỗi kéo theo cả hệ thống
             Dữ liệu dùng chung, ko có phân quyền dữ liệu
             
             
+ OOP(Object Oriented Programming): Lập trình hướng đối tượng(chứa 1 hoặc nhiều đối tượng)
--> System = Tập hợp các Object
--> Object = attribute(s) + method(s)
           = data structure + function

VD: Bài toán quản lý cửa hàng thời trang  
+Bài toán sẽ có những đối tượng: Mặt hàng,...;
+Mặt hàng sẽ cần lưu:
---> Lưu trữ: Mã mặt hàng, tên mặt hàng, giá bán, giá mua,số lượng, kích cỡ	
---> Chức năng: liệt kê các mặt hàng, tìm kiếm, chọn để bán....

+Đơn hàng sẽ cần lưu
---> Lưu trữ: mã đơn hàng,danh sách các mặt hàng, số lượng, tổn tiền, khách hàng
---> Chức năng: tạo đơn hàng, xuất hóa đơn, thanh toán offline/online....	

+ AOP(Aspect Object Programming): lập trình hướng khía cạnh
--->Xây dựng phát triển trong các thư viện, framework
---> Khi gọi/thực thi 1 chức năng, chức năng đó sẽ được thực thi tự động 
       kèm với 1/n chức năng(khía cạnh) khác theo cấu hình 	
       
Vd: Ngôn ngữ JDBC/JPA-Hibernate: Database Connection 
+ Chức năng chuyển/nhận tiền qua các app ngân hàng, làm 2 việc

+ Đăng nhập
+Người chuyển: Trừ số tiền từ tài khoản -->hamA()
+Người nhận: Nhận được số tiền --> hamB()
---> Vấn đề: lỗi mạng, ứng dụng bị lỗi:số tiền từ ng chuyển bị trừ mà người nhận lại chưa nhận được
--> Commit, rollback

hamChuyenTien() {



}









============= OOP trong Java ================
 + Object là khái niệm dùng để mô tả các thực thể trong thế giới thực
              thông tin rõ ràng cụ thể, phân biệt được với các thực thể khác---> đối tượng
              Vd:  2 chiếc xe hơi khác màu sắc,hãng xe,số chỗ ngồi

+ Class: là khái niệm trừu tượng dùng để chỉ tập hợp các đối tượng có chung thuộc tính, phương thức
              Vd:  2 chiếc xe hơi khác màu sắc,hãng xe,số chỗ ngồi
       ---> Mỗi đối tượng xe có thể có màu sắc, hãng xe, số chỗ ngồi giống khác nhau nhưng đều có thông tin: màu sắc,hãng xe,số chỗ ngồi
   Class Car: color,model,noSeats
   ---> khái niệm class, Object chỉ mang tính chất tương đối
   1 class cũng có thể là 1 object hay ngược lại trong các trường hợp khác nhau
   
   Vd: XeHoi: Xe xanh,xe đỏ, xe vàng
      PhuongTien: XeHoi, XeDap, XeMay
         
                  